#!/bin/bash

HELP="A collection of useful kubectl commands that are not available by default.
These commands are useful for pivoting around different data points in the cluster
and can be used to debug and troubleshoot issues.

Usage: kubectl extras <command> [options]

Commands:
    nodes-by-id
    nodes-by-ip
    nodes-by-aws
    pods-by-ip
    pods-by-priority

Example:
    kubectl extras nodes-by-id
    kubectl extras nodes-by-aws
    kubectl extras pods-by-ip
"

pods_by_node() {
    for node in $(kubectl get nodes -o jsonpath='{.items[*].metadata.name}'); do
        pods=$(kubectl get pods --field-selector spec.nodeName="$node" -o jsonpath='{.items[*].metadata.name}' "$@")
        if [ -z "$pods" ]; then
            continue
        fi
        echo "NODE: $node"
        for pod in ${pods[@]}; do
            echo "├── $pod"
        done
    done
}

# switch statement to handle the different commands
main() {
    case "$1" in
        "nodes-by-id")
            shift
            kubectl get nodes -o=custom-columns='NAME:.metadata.name,STATUS:status.conditions[-1].type,ID:.spec.providerID' "$@"
            ;;
        "nodes-by-ip")
            shift
            kubectl get nodes -o=custom-columns='NAME:.metadata.name,STATUS:status.conditions[-1].type,ADDRESS:status.addresses[0].address' "$@"
            ;;
        "nodes-by-aws")
            shift
            kubectl get nodes -o=custom-columns='NAME:.metadata.name,STATUS:status.conditions[-1].type,ZONE:.metadata.labels.topology\.kubernetes\.io/zone,INSTANCE_ID:.spec.providerID,INSTANCE_TYPE:.metadata.labels.node\.kubernetes\.io/instance-type,NODEGROUP:.metadata.labels.eks\.amazonaws\.com/nodegroup,LAUNCH_TEMPLATE_ID:.metadata.labels.eks\.amazonaws\.com/sourceLaunchTemplateId,AMI:.metadata.labels.eks\.amazonaws\.com/nodegroup-image' "$@"
            ;;
        "pods-by-ip")
            shift
            kubectl get pods -o=custom-columns='NAME:.metadata.name,ADDRESS:status.podIP,NODE_API:status.hostIP' "$@"
            ;;
        "pods-by-node")
            shift
            pods_by_node "$@"
            ;;
        "pods-by-priority")
            shift
            kubectl get pods -o=custom-columns='NAME:.metadata.name,PRIORITY_CLASS:spec.priorityClassName,PRIORITY:spec.priority' "$@"
            ;;
        --help | -h)
            echo "$HELP"
            ;;
        * ) 
            echo "$HELP"
            exit 1
            ;;
    esac
}

main "$@"